# Makefile for source-map

.POSIX:
.SUFFIXES:

# Compiler and Flags
CC = gcc
CFLAGS = -std=c11 -Wall -Wextra -Wpedantic -Iinclude -MMD -MP
LDFLAGS =
LDLIBS =

# Project Structure
SRC_DIR = src
BUILD_DIR = build
BIN_DIR = bin
TARGET = $(BIN_DIR)/source-map

# Installation Directories
PREFIX = /usr/local
DESTDIR =
INSTALL_BIN_DIR = $(DESTDIR)$(PREFIX)/bin
INSTALL_CONFIG_DIR = $(DESTDIR)$(PREFIX)/share/source-map/config

# Find all .c files in the source directory
SRCS = $(wildcard $(SRC_DIR)/*.c)
HDRS = $(wildcard include/*.h)

# Replace .c with .o and place them in the build directory
OBJS = $(patsubst $(SRC_DIR)/%.c, $(BUILD_DIR)/%.o, $(SRCS))

# Dependency files generated by -MMD
DEPS = $(OBJS:.o=.d)

# Default target
all: $(TARGET)

# Link the executable
$(TARGET): $(OBJS)
	@mkdir -p $(BIN_DIR)
	$(CC) $(LDFLAGS) $^ -o $@ $(LDLIBS)
	@echo "Build complete. Executable is at $(TARGET)"

# Compile source files into object files
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(BUILD_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Clean build artifacts
clean:
	@rm -rf $(BUILD_DIR) $(BIN_DIR)
	@echo "Build artifacts cleaned."

# Format all source code
format: format-c format-prettier

format-c:
	@command -v clang-format >/dev/null 2>&1 || (echo "Warning: 'clang-format' not found. Skipping C formatting." && exit 0)
	@echo "Formatting C code (.c, .h) with clang-format..."
	@clang-format -i $(SRCS) $(HDRS)

format-prettier:
	@command -v npx >/dev/null 2>&1 || (echo "Warning: 'npx' (Node.js/npm) not found. Skipping Prettier formatting." && exit 0)
	@echo "Formatting other files with Prettier (respecting .prettierignore)..."
	@npx prettier --write . --ignore-unknown

# Install executable and configuration files
install: all
	@mkdir -p $(INSTALL_BIN_DIR)
	@mkdir -p $(INSTALL_CONFIG_DIR)
	@install -m 755 $(TARGET) $(INSTALL_BIN_DIR)
	@install -m 644 config/*.ini $(INSTALL_CONFIG_DIR)
	@echo "source-map installed at $(INSTALL_BIN_DIR)"

# Uninstall executable and configuration files
uninstall:
	@rm -f $(INSTALL_BIN_DIR)/source-map
	@rm -rf $(INSTALL_CONFIG_DIR)
	@echo "source-map uninstalled."

# Phony Targets
.PHONY: all clean install uninstall format format-c format-prettier

# Include dependency files
-include $(DEPS)
